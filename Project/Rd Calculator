import numpy as np

def rotation_matrix_z(theta):
    return np.array([[np.cos(theta), -np.sin(theta), 0],
                     [np.sin(theta), np.cos(theta), 0],
                     [0, 0, 1]])

def rotation_matrix_y(theta):
    return np.array([[np.cos(theta), 0, np.sin(theta)],
                     [0, 1, 0],
                     [-np.sin(theta), 0, np.cos(theta)]])

def rotation_matrix_x(theta):
    return np.array([[1, 0, 0],
                     [0, np.cos(theta), -np.sin(theta)],
                     [0, np.sin(theta), np.cos(theta)]])

def calculate_rotation_matrix(angles):
    q1, q2, q3, q4, q5 = np.radians(angles)  # Convert degrees to radians
    R01 = rotation_matrix_z(q1)
    R12 = rotation_matrix_y(-q2)
    R23 = rotation_matrix_y(-q3)
    R34 = rotation_matrix_y(-q4)
    R45 = rotation_matrix_x(-q5)
    R0T = R01 @ R12 @ R23 @ R34 @ R45  # Matrix multiplication
    return R0T

# Example usage
angles = [45, 30, 60, 90, 45]
rotation_matrix = calculate_rotation_matrix(angles)
print(rotation_matrix)
